name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  build:
    name: ${{ matrix.config.toolchain }} / ${{ matrix.config.os }}

    runs-on: ${{ matrix.config.os }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-latest
            toolchain: beta

          - os: macos-latest
            toolchain: stable

          - os: ubuntu-latest
            toolchain: stable

          - os: windows-latest
            toolchain: stable

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ~/.rustup
          key: ${{ runner.os }}-${{ matrix.config.toolchain }}

      - name: Install Rust ${{ matrix.config.toolchain }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.config.toolchain }}
          components: clippy, rustfmt

      - name: Build
        run: cargo build --all-targets --verbose --workspace

      - name: Test
        run: cargo test --all-targets --verbose --workspace

      - name: Build --all-features
        run: cargo build --all-targets --all-features --verbose --workspace

      - name: Test --all-features
        run: cargo test --all-targets --all-features --verbose --workspace

      - name: Check formatting
        run: cargo fmt --check --all

      - name: Clippy
        run: cargo clippy --all-features -- -D warnings -D clippy::expect_used -D clippy::panic -D clippy::unwrap_used

      - name: Clippy (tests)
        run: cargo clippy --all-features --all-targets -- -D warnings
